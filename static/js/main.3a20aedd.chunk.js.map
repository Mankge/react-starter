{"version":3,"sources":["components/Player.js","components/Song.js","data.js","components/Nav.js","components/LibrarySong.js","components/Library.js","App.js","reportWebVitals.js","index.js"],"names":["Player","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","audioRef","useState","currentTime","duration","volume","animationPercentage","songInfo","setSongInfo","activeVolume","setActiveVolume","isShuffle","setIsShuffle","useEffect","ManageShuffle","setShuffleArray","isRepeat","setIsRepeat","shuffleArray","length","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","timeUpdateHandler","e","current","target","roundedCurrent","Math","round","roundedDuration","animation","getTime","time","floor","slice","skipTrackHandler","direction","a","play","newSongIndex","temporaryArray","filter","index","currentIndex","findIndex","possibleNewIndex","tractAnim","transform","songEndHandler","songIndex","random","indexOf","push","className","style","background","color","min","type","max","onChange","value","onClick","icon","faRandom","size","faAngleLeft","pause","faPause","faPlay","faAngleRight","faRedo","faVolumeUp","faVolumeMute","step","onTimeUpdate","onLoadedMetadata","ref","src","audio","onEnded","Song","cover","alt","name","artist","chillHop","uuidv4","Nav","libraryStatus","setLibraryStatus","faMusic","LibrarySong","songSelectHandler","Library","App","data","useRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a20aedd.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faPause,\n  faAngleLeft,\n  faAngleRight,\n  faRandom,\n  faRedo,\n  faVolumeMute,\n  faVolumeUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useEffect, useState } from \"react\";\n\nconst Player = ({\n  songs,\n  setSongs,\n  currentSong,\n  setCurrentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n}) => {\n  //state\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    volume: 0,\n    animationPercentage: 0,\n  });\n  const [activeVolume, setActiveVolume] = useState(true);\n\n  const [isShuffle, setIsShuffle] = useState(false);\n  useEffect(() => {\n    if (isShuffle) {\n      ManageShuffle();\n    } else {\n      setShuffleArray([]);\n    }\n  }, [isShuffle]);\n\n  const [isRepeat, setIsRepeat] = useState(false);\n  const [shuffleArray, setShuffleArray] = useState([]);\n\n  useEffect(() => {\n    if (shuffleArray.length === 0 && isShuffle) {\n      ManageShuffle();\n    }\n  }, [shuffleArray]);\n\n  const activeLibraryHandler = (nextPrev) => {\n    const newSongs = songs.map((song) => {\n      if (song.id === nextPrev.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  };\n\n  //Event Handler\n  const playSongPlayer = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //calculate a percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      volume: e.target.volume,\n      animationPercentage: animation,\n    });\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const skipTrackHandler = async (direction) => {\n    if (isRepeat) {\n      audioRef.current.currentTime = 0;\n      setSongInfo({\n        ...songInfo,\n        currentTime: 0,\n        animationPercentage: 0,\n      });\n      if (isPlaying) audioRef.current.play();\n      return;\n    }\n    if (isShuffle) {\n      let newSongIndex = shuffleArray[shuffleArray.length - 1];\n      let temporaryArray = shuffleArray.filter(\n        (index) => index !== newSongIndex\n      );\n      setShuffleArray(temporaryArray);\n      await setCurrentSong(songs[newSongIndex]);\n      activeLibraryHandler(songs[newSongIndex]);\n    } else {\n      let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n      if (direction === \"skip-forward\") {\n        await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n        activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n      }\n      if (direction === \"skip-back\") {\n        let possibleNewIndex = (currentIndex - 1) % songs.length;\n        if (possibleNewIndex === -1) {\n          await setCurrentSong(songs[songs.length - 1]);\n          activeLibraryHandler(songs[songs.length - 1]);\n        } else {\n          await setCurrentSong(songs[possibleNewIndex]);\n          activeLibraryHandler(songs[possibleNewIndex]);\n        }\n      }\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const tractAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n\n  const songEndHandler = async () => {\n    if (isRepeat) {\n      if (isPlaying) audioRef.current.play();\n      return;\n    }\n    if (isShuffle) {\n      let newSongIndex = shuffleArray[shuffleArray.length - 1];\n      let temporaryArray = shuffleArray.filter(\n        (index) => index !== newSongIndex\n      );\n      setShuffleArray(temporaryArray);\n      await setCurrentSong(songs[newSongIndex]);\n      activeLibraryHandler(songs[newSongIndex]);\n    } else {\n      let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n\n  const ManageShuffle = () => {\n    let temporaryArray = [];\n    while (temporaryArray.length < songs.length) {\n      const songIndex = Math.floor(Math.random() * songs.length);\n      if (temporaryArray.indexOf(songIndex) === -1)\n        temporaryArray.push(songIndex);\n    }\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    temporaryArray = temporaryArray.filter((index) => index !== currentIndex);\n    setShuffleArray(temporaryArray);\n  };\n\n  const shuffleTrackHandler = () => {\n    setIsShuffle(!isShuffle);\n  };\n\n  const RepeatTrackHandler = () => {\n    setIsRepeat(!isRepeat);\n  };\n\n  const changeVolume = (e) => {\n    let value = e.target.value;\n    audioRef.current.volume = value;\n    setSongInfo({ ...songInfo, volume: value });\n  };\n\n  // const muteUp = () =>{\n\n  // }\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\n          }}\n          className=\"track\"\n        >\n          <input\n            min={0}\n            type=\"range\"\n            max={songInfo.duration || 0}\n            onChange={dragHandler}\n            value={songInfo.currentTime}\n          />\n          <div className=\"animate-track\" style={tractAnim}></div>\n        </div>\n\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={shuffleTrackHandler}\n          icon={faRandom}\n          className={isShuffle ? \"shuffle\" : \"\"}\n          size=\"1x\"\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          icon={faAngleLeft}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={playSongPlayer}\n          className=\"play\"\n          icon={isPlaying ? faPause : faPlay}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\"\n          icon={faAngleRight}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={RepeatTrackHandler}\n          icon={faRedo}\n          className={isRepeat ? \"auto-repeat\" : \"\"}\n          size=\"1x\"\n        />\n      </div>\n      <div className=\"volume-control\">\n        <FontAwesomeIcon\n          onClick={() => setActiveVolume(!activeVolume)}\n          className=\"volume\"\n          icon={activeVolume ? faVolumeUp : faVolumeMute}\n          size=\"lg\"\n        />\n        <input\n          onChange={changeVolume}\n          value={songInfo.volume}\n          max=\"1\"\n          min=\"0\"\n          step=\"0.01\"\n          type=\"range\"\n        />\n      </div>\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n};\n\nexport default Player;\n","const Song = ({ currentSong, isPlaying }) => {\n  return (\n    <div className=\"song-container\">\n      <img\n        src={currentSong.cover}\n        alt=\"Cover\"\n        className={isPlaying ? \"rotate\" : \"\"}\n      />\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\n  const openLibraHandler = () => {\n    setLibraryStatus(!libraryStatus);\n  };\n  return (\n    <nav>\n      <h1>Waves</h1>\n      <button\n        className={libraryStatus ? \"library-active\" : \"\"}\n        onClick={openLibraHandler}\n      >\n        Library\n        <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","const LibrarySong = ({\n  song,\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  id,\n  setSongs,\n}) => {\n  const songSelectHandler = async () => {\n    await setCurrentSong(song);\n\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n    //check if the song is playing or not\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img src={song.cover} alt=\"Cover\" />\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus,\n}) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            song={song}\n            setSongs={setSongs}\n            songs={songs}\n            setCurrentSong={setCurrentSong}\n            id={song.id}\n            key={song.id}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport data from \"./data\";\nimport Nav from \"./components/Nav\";\nimport Library from \"./components/Library\";\nimport \"./styles/app.scss\";\nimport { useState, useRef } from \"react\";\n\nfunction App() {\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const audioRef = useRef(null);\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} isPlaying={isPlaying} />\n      <Player\n        isPlaying={isPlaying}\n        songs={songs}\n        setSongs={setSongs}\n        setIsPlaying={setIsPlaying}\n        setCurrentSong={setCurrentSong}\n        currentSong={currentSong}\n        audioRef={audioRef}\n      />\n      <Library\n        songs={songs}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        libraryStatus={libraryStatus}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}